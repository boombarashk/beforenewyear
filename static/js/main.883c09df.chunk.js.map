{"version":3,"sources":["Timer.js","App.js","index.js"],"names":["newYear","Date","getFullYear","timeNewYear","concat","getTime","minutesMs","hoursMs","daysMs","grammar","count","unitL","msg","check1","check2","rest10","includes","units","calculate","ms","diff","days","Math","floor","diffWithoutDays","hours","diffWithoutDays_n_Hours","minutes","seconds","Timer","setCount","useState","useEffect","id","setInterval","c","clearInterval","_jsx","children","App","className","_jsxs","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"wKAEA,MAAMA,GAAU,IAAIC,MAAOC,cAAgB,EACrCC,EAAc,IAAIF,KAAK,SAADG,OAAUJ,IAAWK,UAE3CC,EAAY,IACZC,EAAUD,KACVE,EAASD,MAETE,EAAUA,CAACC,EAAOC,KACpB,IAAIC,EAAM,GACV,GAAIF,EAAQ,GAAe,MAAVC,EAAe,CAC5B,MAAME,EAAUH,GACLA,EAAQ,KAAO,GAAe,KAAVA,EAEzBI,EAAUJ,IACZ,MAAMK,EAASL,EAAQ,GACvB,OAAOK,GAAU,GAAKA,EAAS,IAAO,CAAC,GAAG,GAAG,IAAIC,SAASN,EAAO,EAErE,IAAIO,EAAQ,GACZ,OAAQN,GACJ,IAAK,IACDM,EADUJ,EAAOH,GACT,2BACGI,EAAOJ,GAAS,qBAAQ,2BACnC,MACJ,IAAK,IAAKO,EAAQ,iCACV,CAAC,EAAE,EAAE,EAAG,GAAI,IAAID,SAASN,GAAUO,EAAQ,2BAC3C,CAAC,EAAE,IAAID,SAASN,KAAUO,EAAQ,sBACtC,MACJ,IAAK,IAAKA,EAAQ,iCACVJ,EAAOH,KAAUO,GAAS,KAC1BH,EAAOJ,KAAUO,GAAS,UAC9B,MACJ,IAAK,IAAKA,EAAQ,uCACVJ,EAAOH,KAAUO,GAAS,KAC1BH,EAAOJ,KAAUO,GAAS,UAGtCL,EAAG,GAAAR,OAAMM,EAAK,KAAAN,OAAIa,EACtB,CACA,OAAOL,CAAG,EAGRM,EAAaC,IACf,MAAMC,EAAOjB,EAAcgB,EACrBE,EAAOC,KAAKC,MAAMH,EAAOZ,GACzBgB,EAAkBJ,EAAQC,EAAOb,EACjCiB,EAAQH,KAAKC,MAAMC,EAAkBjB,GACrCmB,EAA0BF,EAAmBC,EAAQlB,EACrDoB,EAAUL,KAAKC,MAAMG,EAA0BpB,GAC/CsB,EAAUN,KAAKC,OAAOG,EAA2BC,EAAUrB,GAAc,KAC/E,MAAM,GAANF,OAAUK,EAAQY,EAAM,KAAI,KAAAjB,OAAIK,EAAQgB,EAAO,KAAI,KAAArB,OAAIK,EAAQkB,EAAS,KAAI,KAAAvB,OAAIK,EAAQmB,EAAS,KAAI,EAG1F,SAASC,IACpB,MAAOnB,EAAOoB,GAAYC,oBAAS,IAAI9B,MAAOI,WAS9C,OAPA2B,qBAAU,KACN,MAAMC,EAAKC,aAAY,KACnBJ,GAASK,GAAKA,EAAI,KAAK,GACxB,KACH,MAAO,IAAMC,cAAcH,EAAG,GAC/B,IAEII,cAAA,OAAAC,SAAOpB,EAAUR,IAC5B,CCxDe6B,MARf,WACE,OACEF,cAAA,OAAKG,UAAU,oBAAmBF,SAC9BG,eAAA,OAAKD,UAAU,oBAAmBF,SAAA,CAAC,+HAAwBD,cAACR,EAAK,QAGzE,ECCAa,IAASC,OACPN,cAACO,IAAMC,WAAU,CAAAP,SACfD,cAACE,EAAG,MAENO,SAASC,eAAe,Q","file":"static/js/main.883c09df.chunk.js","sourcesContent":["import {useState, useEffect} from 'react'\r\n\r\nconst newYear = new Date().getFullYear() + 1\r\nconst timeNewYear = new Date(`01.01.${newYear}`).getTime()\r\n\r\nconst minutesMs = 1000 * 60\r\nconst hoursMs = minutesMs * 60\r\nconst daysMs = hoursMs * 24\r\n\r\nconst grammar = (count, unitL) => {\r\n    let msg = ''\r\n    if (count > 0 && unitL !== 's') {\r\n        const check1 = (count) => {\r\n            return count % 10 === 1 && count !== 11\r\n        }\r\n        const check2 = (count) => {\r\n            const rest10 = count % 10\r\n            return rest10 >= 2 && rest10 < 5 && !([12,13,14].includes(count))\r\n        }\r\n        let units = ''\r\n        switch (unitL) {\r\n            case 'd': if (check1(count)) {\r\n                units = 'день'\r\n            } else units = check2(count) ? 'дня' : 'дней'\r\n                break;\r\n            case 'h': units = 'часов';\r\n                if ([2,3,4, 22, 23].includes(count)) { units = 'часа' } else\r\n                if ([1,21].includes(count)) { units = 'час' }\r\n                break;\r\n            case 'm': units = 'минут';\r\n                if (check1(count)) { units += 'a' }\r\n                if (check2(count)) { units += 'ы' }\r\n                break;\r\n            case 's': units = 'секунд';\r\n                if (check1(count)) { units += 'a' }\r\n                if (check2(count)) { units += 'ы' }\r\n                break;\r\n        }\r\n        msg = `${count} ${units}`\r\n    }\r\n    return msg\r\n}\r\n\r\nconst calculate = (ms) => {\r\n    const diff = timeNewYear - ms\r\n    const days = Math.floor(diff / daysMs)\r\n    const diffWithoutDays = diff - (days * daysMs)\r\n    const hours = Math.floor(diffWithoutDays / hoursMs)\r\n    const diffWithoutDays_n_Hours = diffWithoutDays - (hours * hoursMs)\r\n    const minutes = Math.floor(diffWithoutDays_n_Hours / minutesMs)\r\n    const seconds = Math.floor((diffWithoutDays_n_Hours - (minutes * minutesMs)) / 1000 )\r\n    return `${grammar(days, 'd')} ${grammar(hours, 'h')} ${grammar(minutes, 'm')} ${grammar(seconds, 's')}`\r\n}\r\n\r\nexport default function Timer() {\r\n    const [count, setCount] = useState(new Date().getTime());\r\n\r\n    useEffect(() => {\r\n        const id = setInterval(() => {\r\n            setCount(c => c + 1000);\r\n        }, 1000);\r\n        return () => clearInterval(id);\r\n    }, []);\r\n\r\n    return <div>{ calculate(count) }</div>;\r\n}\r\n","import Timer from \"./Timer\";\r\nfunction App() {\r\n  return (\r\n    <div className=\"App fullscreen-bg\">\r\n        <div className='App-text black-bg'>до нового года осталось <Timer/></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\n// import '../public/font/Xiomara.woff'\r\n// import '../public/font/Xiomara.woff2'\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}